<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nailro.mapper.MemberMapper">

    <insert id="insert" parameterType="Member">
        insert into member
        (ID,NAME,PASS,AGE,GENDER,PHONE,HOMEPHONE,EMAIL,JOINDATE,MERIT,ADDRESS) 
        values(
        #{id},#{name},#{pass},#{age},#{gender},#{cellPhone},#{telNo},#{email},sysdate,#{merit},#{address})
    </insert>
    
    <update id="update" parameterType="Member" >
        update member set pass=#{pass} ,
                          phone=#{cellPhone},
                          homephone= #{telNo},
                          email=#{email},
                          merit =#{merit},
                          address =#{address}                   
        where id=#{id}
    </update>
    
    
    <!-- 로그인 -->
    <select id="login" resultType="Member" parameterType="Command">
        select 
        id as id,
        name as name,
        pass as pass,
        age as age,
        gender as gender,
        phone as cellPhone,
        homephone as telNo,
        email as email,
        merit as merit,
        address as address,
        joindate as joindate
        from member where id=#{id} and pass=#{pass}
    </select>
 
    <select id="getElementsByName" resultType="Member" parameterType="Command">
        select *
        from (select rownum as seq, m.* from Member m where ${searchKey} like '%' || #{searchVal} || '%')
        where seq between #{start} and #{end}
        order by name asc
      
    </select>
    
    <select id="getElementsById" resultType="Member" parameterType="Command">
     select 
        id as id,
        name as name,
        pass as pass,
        age as age,
        gender as gender,
        phone as cellPhone,
        homephone as telNo,
        email as email,
        merit as merit,
        address as address,
        joindate as joindate
    from (select rownum as seq, m.* from Member m where ${searchKey} like '%' || #{searchVal} || '%')
    where seq between #{start} and #{end}
    order by id asc
    </select>
    
     <select id="list" resultType="Member" parameterType="Command">
      select 
       	id as id,
        name as name,
        pass as pass,
        age as age,
        gender as gender,
        phone as cellPhone,
        homephone as telNo,
        email email,
        joindate as joindate,
        merit as merit,
        address as address
      from (select rownum as seq, m.* from member m)
      where seq between #{start} and #{end}
      order by id asc
    </select>	
    
    
    
    <select id="getElementById" resultType="Member" parameterType="Command">
       select 
        id as id,
        name as name,
        pass as pass,
        age as age,
        gender as gender,
        phone as cellPhone,
        homephone as telNo,
        email as email,
        merit as merit,
        address as address,
        joindate as joindate
       from member
       where ${searchKey} =#{searchVal}
  
    </select>
    
    <select id= "countSome" resultType="int" parameterType="Command">
    select count(*)
    from member
    where (${searchKey} = #{searchVal})
    </select>
    
    <select id="countAll" resultType="int">
        select count(*) from member
    </select>
    
    <!-- 회원 정보 추축(이름/핸드폰번호) -->
    <select id="findId" resultType="Member" parameterType="Command">
        select 
        id as id,
        name as name,
        pass as pass,
        age as age,
        gender as gender,
        phone as cellPhone,
        homephone as telNo,
        email as email,
        merit as merit,
        address as address,
        joindate as joindate
        from member where name=#{searchKey} and phone=#{searchVal}
    </select>
    
    <!-- 회원 정보 추축(이름/핸드폰번호) -->
    <select id="findPass" resultType="Member" parameterType="Command">
        select 
        id as id,
        name as name,
        pass as pass,
        age as age,
        gender as gender,
        phone as cellPhone,
        homephone as telNo,
        email as email,
        merit as merit,
        address as address,
        joindate as joindate
        from member where id=#{searchKey} and phone=#{searchVal}
    </select>
    
  
    
  <!-- delete 삭제 -->
    <delete id="delete" parameterType="Member">
        delete from member where id=#{id} 
    </delete>
 
    <!-- id 중복체크 -->
    <select id="idCheck" parameterType="Member" resultType="int">
        select count(*) from member where id=#{value} 
    </select>        
    
    
</mapper>

